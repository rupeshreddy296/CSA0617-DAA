def dice_throw(num_sides, num_dice, target):
    # Create a DP table with (num_dice + 1) rows and (target + 1) columns
    dp = [[0 for _ in range(target + 1)] for _ in range(num_dice + 1)]
    
    # Base case: There's one way to get sum 0 with 0 dice
    dp[0][0] = 1
    
    # Iterate over the number of dice
    for i in range(1, num_dice + 1):
        # Iterate over all possible sums (1 to target)
        for j in range(1, target + 1):
            # Calculate the number of ways to achieve the sum j with i dice
            for k in range(1, num_sides + 1):
                if j - k >= 0:
                    dp[i][j] += dp[i - 1][j - k]
    
    # Return the result which is the number of ways to get the target sum with num_dice dice
    return dp[num_dice][target]

# Example usage:
num_sides = 6  # Number of sides on the die
num_dice = 3   # Number of dice
target = 9     # Target sum

result = dice_throw(num_sides, num_dice, target)
print(f"The number of ways to roll {num_dice} dice to get a sum of {target} is: {result}")
